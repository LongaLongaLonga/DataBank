-- CHALLENGE CAN BE FOUND: https://8weeksqlchallenge.com/case-study-4/

-- B. CUSTOMER TRANSACTIONS
-- 1. What is the unique count and total amount for each transaction type?

SELECT 
TXN_TYPE,
COUNT(*) AS TXN_COUNT,
SUM(TXN_AMOUNT) AS TXN_VALUE
FROM CUSTOMER_TRANSACTIONS
GROUP BY TXN_TYPE;

-- 2. What is the average total historical deposit counts and amounts for all customers?

WITH DEPOSIT AS (
SELECT 
CUSTOMER_ID, 
AVG(TXN_AMOUNT) AS AVG_TXN_VALUE,
COUNT(*) AS TXN_COUNT
FROM CUSTOMER_TRANSACTIONS 
WHERE TXN_TYPE = 'deposit'
GROUP BY CUSTOMER_ID
)

SELECT 
ROUND(AVG(AVG_TXN_VALUE), 2) AS AVG_DEPOSIT_VALUE,
ROUND(AVG(TXN_COUNT), 0) AS AVG_TXN
FROM DEPOSIT;

-- 3. For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?

WITH MONTHLY_TRANSACTIONS AS (
    SELECT
        CUSTOMER_ID,
        DATE_TRUNC('MONTH', TXN_DATE) AS TXN_MONTH,
        SUM(CASE WHEN TXN_TYPE = 'deposit' THEN 1 ELSE 0 END) AS DEPOSIT_COUNT,
        SUM(CASE WHEN TXN_TYPE = 'purchase' THEN 1 ELSE 0 END) AS PURCHASE_COUNT,
        SUM(CASE WHEN TXN_TYPE = 'withdrawal' THEN 1 ELSE 0 END) AS WITHDRAWAL_COUNT
    FROM
        CUSTOMER_TRANSACTIONS
    GROUP BY
        CUSTOMER_ID, TXN_MONTH
)
SELECT
    TXN_MONTH,
    COUNT(CUSTOMER_ID) AS CUSTOMER_COUNT
FROM
    MONTHLY_TRANSACTIONS
WHERE
    DEPOSIT_COUNT > 1
    AND (PURCHASE_COUNT >= 1 OR WITHDRAWAL_COUNT >= 1)
GROUP BY
    TXN_MONTH
ORDER BY
    TXN_MONTH;


-- 4. What is the closing balance for each customer at the end of the month?

WITH MONTHLY_NET_CHANGES AS (
    SELECT
        CUSTOMER_ID,
        DATE_TRUNC('MONTH', TXN_DATE) AS MONTH,
        SUM(CASE WHEN TXN_TYPE = 'deposit' THEN TXN_AMOUNT ELSE 0 END)  -
        SUM(CASE WHEN TXN_TYPE = 'withdrawal' THEN TXN_AMOUNT ELSE 0 END) AS NET_CHANGE
    FROM
        CUSTOMER_TRANSACTIONS
    GROUP BY
        CUSTOMER_ID, MONTH
),
CUMULATIVE_BALANCE AS (
    SELECT
        CUSTOMER_ID,
        MONTH,
        SUM(NET_CHANGE) OVER (PARTITION BY CUSTOMER_ID ORDER BY MONTH) AS CLOSING_BALANCE
    FROM
        MONTHLY_NET_CHANGES
)
SELECT
    CUSTOMER_ID,
    MONTH,
    CLOSING_BALANCE
FROM
    CUMULATIVE_BALANCE
ORDER BY
    CUSTOMER_ID, MONTH;
